/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotelideal.vistas;

import hotelideal.Conexion;
import hotelideal.Habitacion;
import hotelideal.HabitacionData;
import hotelideal.Huesped;
import hotelideal.TipoDeHabitacion;
import hotelideal.TipoDeHabitacionData;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LEBP
 */
public class ListaHabitacion extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo;
    private ArrayList<Habitacion> listaHabitaciones;
    private ArrayList<TipoDeHabitacion> listaTipoHabitaciones;
    private HabitacionData habitacionData;
    private TipoDeHabitacionData tipodehabitacionData;
    private Conexion conexion;
    private ArrayList<Huesped> listaHuespuedes;
    /**
     * Creates new form ListaHabitacion
     */
    public ListaHabitacion() {
        try {
            initComponents();
           conexion = new Conexion("jdbc:mysql://localhost/hotelidealgrupo5", "root", "");
            
            modelo = new DefaultTableModel();
        
       habitacionData=new HabitacionData (conexion);
       listaHabitaciones= (ArrayList) habitacionData.obtenerHabitaciones();
              
        
        tipodehabitacionData = new TipoDeHabitacionData(conexion);
        listaTipoHabitaciones=(ArrayList) tipodehabitacionData.obtenerTipoDeHabitacion();
               
         cargaTipoDeHabitacion();
         armaCabeceraTabla();
         cargaDatos();
         
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ListaHabitacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbTipo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbHabitaciones = new javax.swing.JTable();

        jLabel1.setText("Listado de Habitaciones");

        cbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoActionPerformed(evt);
            }
        });

        jLabel2.setText("Estado");

        tbHabitaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbHabitaciones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoActionPerformed
        // TODO add your handling code here:
        borraFilasTabla();
cargaDatos();
    }//GEN-LAST:event_cbTipoActionPerformed

    public void armaCabeceraTabla(){
    
        //Titulos de Columnas
        ArrayList<Object> columnas=new ArrayList<Object>();
        columnas.add("ID");
        columnas.add("NUMERO");
        columnas.add("PISO");
        columnas.add("ESTADO");
        //columnas.add("ID_PERSONA");
        for(Object it:columnas){
        
            modelo.addColumn(it);
        }
        tbHabitaciones.setModel(modelo);
  }
public void borraFilasTabla(){

            int a =modelo.getRowCount()-1;
            System.out.println("Tabla "+a);
            for(int i=a;i>=0;i--){
                modelo.removeRow(i );
                System.out.println("Tabla "+i);
            }
      }
 public void cargaDatos(){
            //borraFilasTabla();
                       
         
            HabitacionData hd =new HabitacionData(conexion);
             TipoDeHabitacion seleccionada=(TipoDeHabitacion) cbTipo.getSelectedItem();
           listaHabitaciones=(ArrayList)hd.obtenerHabitacionesXTipoDeHabitacion(seleccionada.getId_tipo_de_habitacion());
                 
        //Llenar filas
        for(Habitacion h:listaHabitaciones){
          
            modelo.addRow(new Object[]{h.getId_habitacion(),h.getNumero(),h.getPiso(),h.isEstado()});
               
            }           
        }
    

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<TipoDeHabitacion> cbTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbHabitaciones;
    // End of variables declaration//GEN-END:variables
public void cargaTipoDeHabitacion(){
    for(TipoDeHabitacion item:listaTipoHabitaciones){
            cbTipo.addItem(item);
    }
}
}
