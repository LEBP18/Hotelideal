/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotelideal.vistas;

import hotelideal.Conexion;
import hotelideal.Habitacion;
import hotelideal.HabitacionData;
import hotelideal.Huesped;
import hotelideal.TipoDeHabitacion;
import hotelideal.TipoDeHabitacionData;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LEBP
 */
public class ListadoHabitaciones extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo;
    private ArrayList<Habitacion> listaHabitaciones;
    private ArrayList<TipoDeHabitacion> listaTipoHabitaciones;
    private HabitacionData habitacionData;
    private TipoDeHabitacionData tipodehabitacionData;
    private Conexion conexion;
    private ArrayList<Huesped> listaHuespuedes;
    /**
     * Creates new form ListaHabitacionXEstado
     */
    public ListadoHabitaciones() {
        try {
            initComponents();
           conexion = new Conexion("jdbc:mysql://localhost/hotelidealgrupo5", "root", "");
            
            modelo = new DefaultTableModel();
        
       habitacionData=new HabitacionData (conexion);
       listaHabitaciones= (ArrayList) habitacionData.obtenerHabitaciones();
              
        
        tipodehabitacionData = new TipoDeHabitacionData(conexion);
        listaTipoHabitaciones=(ArrayList) tipodehabitacionData.obtenerTipoDeHabitacion();
               
        armaCabeceraTabla(); 
        borrarFilasTabla();
        cargaTipoDeHabitacion();
         
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ListadoHabitaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbHabitacion = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Hotel Ideal");

        tbHabitacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbHabitacion);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel1.setText("Habitaciones cargadas en el Hotel");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/183569285-eden-au-lac-recepcion-del-hotel-lobby-del-hotel-check-in.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(119, 119, 119))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 public void armaCabeceraTabla(){
    
        //Titulos de Columnas
        ArrayList<Object> columnas=new ArrayList<Object>();
        columnas.add("ID");
        columnas.add("Número");
        columnas.add("Piso");
        columnas.add("Estado");
        columnas.add("Tipo de Habitación");
        columnas.add("Tipo de Cama");
        columnas.add("Cant. de Camas");
        columnas.add("Max. de Personas");
        columnas.add("Precio por Noche");
        
        for(Object it:columnas){
        
            modelo.addColumn(it);
        }
        tbHabitacion.setModel(modelo);
        
  }
public void borrarFilasTabla(){

            int a =modelo.getRowCount()-1;
            System.out.println("Tabla "+a);
            for(int i=a;i>=0;i--){
                modelo.removeRow(i );
                System.out.println("Tabla "+i);
            }
      }


public void cargaTipoDeHabitacion(){
    listaHabitaciones=(ArrayList)habitacionData.obtenerHabitaciones();
    borrarFilasTabla();
    
    for(Habitacion item:listaHabitaciones){
        
        String estado;    
        if(item.isEstado()){
            estado="Libre";
        }else {estado="Ocupada";
    }
        modelo.addRow(new Object[]{item.getId_habitacion(), item.getNumero(), item.getPiso(), item.isEstado(), item.getTipo_de_habitacion().getTipo()
                , item.getTipo_de_habitacion().getTipo_camas(), item.getTipo_de_habitacion().getCant_camas(),
                item.getTipo_de_habitacion().getMax_personas(), item.getTipo_de_habitacion().getPrecio_noche()
        });
    }
}
/*
 public void cargaDatos(){
            //borraFilasTabla();
        HabitacionData hd =new HabitacionData(conexion);
        TipoDeHabitacion seleccionada=(TipoDeHabitacion) cbEstado.getSelectedItem();
        listaHabitaciones=(ArrayList)hd.obtenerHabitacionesXTipoDeHabitacion(seleccionada.getId_tipo_de_habitacion());
                 
        //Llenar filas
        for(Habitacion h:listaHabitaciones){
          
            modelo.addRow(new Object[]{h.getId_habitacion(),h.getNumero(),h.getPiso(),h.isEstado()});
               
            }           
        }
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbHabitacion;
    // End of variables declaration//GEN-END:variables
}
